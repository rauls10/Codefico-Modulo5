1 - O que é NVM?
NVM, ou Node Version Manager é um gerenciador de versões do Node.JS.

2 a) O que é NPM e para que o utilizamos?
NPM é o gerenciador de pacotes do Node, que vem junto com ele.
É um repositório amplamente usado para a publicação de projetos Node.js de código aberto.
O NPM é uma ferramenta de linha de comando que ajuda a interagir com plataformas online, 
como navegadores e servidores.
b) O que o comando "npm install prompt-sync" realiza?
Faz uma busca para procurar e instalar a versão mais atualizada do NPM.
c) Em qual diretório devemos instalar uma biblioteca javascript?
No diretório em que foi instalado no Node.

3 - Existe diferença entre o código que cria e o que faz uso de uma variável em python? 
Se sim explique essa diferença.
Sim, no que cria, esse processo é feito antes na declaração de variáveis, no que faz uso, 
já é aproveitado de uma variável criada anteriormente.

4 - Existe diferença entre o código que cria e o que faz uso de uma variável em javascript? 
Se sim explique essa diferença.
Sim, no que cria, esse processo é feito antes na declaração de variáveis, no que faz uso,
já é aproveitado de uma variável criada anteriormente.

5 - Explique as diferenças e especificidades de variáveis criadas com os comandos:
a) const
const é a variável constante, como o próprio nome diz, não vai ser alterada, como no caso de 
listas. Tem escopo de bloco, não pode ser atualizado nem declarado novamente. 
b) var
var é a variável sujeita a alteração posteriormente do usuário, 
utilizada para vários fins. var é utilizada em escopo global quando utilizada 
fora de uma função.
c) let
let tem escopo de bloco. Ou seja só irá funcionar dentro de uma parte do código 
cercado por {} chaves. let pode ser atualizado, mas não declarado novamente.

6 - Diga o que será impresso na tela após executar cada um dos códigos abaixo:
var x = 5;
function fun() {
    var x = 6;
    console.log(x);
}
console.log(x);
Irá armazenar o valor x na variável, posteriormente dentro da função,
irá receber o valor 6, e imprimir esse valor, após sair da função irá imprimir 
o valor 6, pois pega o valor da função.
let x = 5;
function fun() {
    let x = 6;
    console.log(x);
}
console.log(x);
O let como trata a variável como escopo local, a global vai ter um valor e a da 
função outro, seguindo a sequência, irá imprimir 6 de dentro da função, e depois 5 
do escopo global.

7 - É possível editar o valor de uma variável (const), de uma lista (const) ou de um objeto (const)?
const list = [1, 2, 3];
list = [4, 5, 6];
De uma lista const não será possível, pois como foi feita uma tentativa de troca de lista, 
e não de procura dentro de uma posição específica, dará erro.

const pessoa = {nome: 'João', idade: 18};
pessoa.nome = 'Maria';
pessoa.idade = 20;
Nesse caso será possível, pois a constante pessoa é instanciada com duas características, 
nome e idade, e após a consulta logo abaixo, será possível fazer essa mudança.
 
const PI = 3.1415;
PI = 3.14;
Aqui não será possível pois a constante PI, tentará ser alterada logo abaixo, 
acasionando erro.

8 - Escreva um código criando uma função em javascript de maneira convencional e armazenando 
uma função em uma constante nomeada (variável constante)
function fun(){
	let x = 3;
	console.log(x);
	const y = function sad(){
        console.log(y);
    }
}
